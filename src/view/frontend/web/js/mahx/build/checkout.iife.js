(function(){"use strict";class m{static toJson(e,t){t=m.merge(m.defaultOptionsToJson,t);function i(c){if(typeof t.inputFilter=="function"&&t.inputFilter(c)!==!0||!t.includeDisabled&&c.disabled)return!1;const f=(c.type||"text").toLowerCase();return!(!t.includeButtonValues&&(c instanceof HTMLButtonElement||m.buttonInputTypes.indexOf(f)>-1)||typeof t.uncheckedValue>"u"&&m.checkedInputTypes.indexOf(f)>-1&&!c.checked)}const s=m.getFieldTree(e,i);let l=t.flatList?[]:{};const r=[];function n(c,f){for(let b in c){const h=c[b],L=t.flatList?h.name:b;if(h.type==="nested"){t.flatList?n(h.tree,f):(f[b]={},n(h.tree,f[b]));continue}const v=h.input,S=h.inputType;if(S==="file"){t.filesCallback&&r.push({object:f,key:L,input:v});continue}let I=null;if(h.type==="radio"){for(let g=0;g<h.inputs.length;g++){const k=h.inputs[g];if(k.checked){I=k.value;break}}I===null&&(I=t.uncheckedValue)}else if(S==="checkbox")I=v.checked?v.value:t.uncheckedValue;else if(v instanceof HTMLSelectElement){let g=[];for(let k=0;k<v.options.length;k++){let F=v.options[k];F.selected&&g.push((typeof F.value<"u"?F.value:F.text).toString())}v.multiple?I=g:I=g.length?g[0]:null}else I=v.value;t.flatList?f.push([h.name,I]):f[L]=I}}function d(c){if(m.isObject(c)){let f=0,b=!0;for(let h in c)m.isObject(c[h])&&!(c[h]instanceof Element)&&(c[h]=d(c[h])),parseInt(h)!==f&&(b=!1),f++;if(b){let h=[];for(let L in c)h.push(c[L]);return h}}return c}function a(){return t.arrayify&&(l=d(l)),t.skipEmpty&&(l=u(l)||(t.flatList?[]:{})),l}function u(c,f){const b=m.isArray(c);let h=b?[]:{},L=0;for(let v in c){let S=c[v];t.flatList&&!f&&(S=S[1]),!(S==null||S==="")&&((m.isObject(S)||m.isArray(S))&&(S=u(S,(f||0)+1)||""),!(typeof S!="object"&&m.stringify(S)==="")&&(b?h.push(t.flatList&&!f?[c[v][0],S]:S):h[v]=S,L++))}return L?h:null}if(n(s,l),r.length){let c=0,f=0;for(let b=0;b<r.length;b++){let h=r[b],L=h.object;f+=h.input.files.length;for(let v=0;v<h.input.files.length;v++){let S=h.input.files[v],I=new FileReader;I.onload=function(){h.input.multiple?(m.isArray(L[h.key])||(L[h.key]=[]),L[h.key].push(I.result)):L[h.key]=I.result,c++,c===f&&t.filesCallback(a())},I[t.fileReaderFunction](S)}}return null}else if(t.filesCallback)return t.filesCallback(a()),null;return a()}static fromJson(e,t,i,s){if(!m.isObject(t)&&!m.isArray(t))return;i=m.merge(m.defaultOptionsFromJson,i);const l=m.getFieldTree(e),r={};i.clearOthers&&m.clear(e),i.resetOthers&&m.reset(e);function n(d,a){if(!(!m.isObject(a)&&!m.isArray(a)))for(let u in d){const c=d[u],f=i.flatList?c.name:u;if(c.type==="nested"){if(i.flatList)n(c.tree,a);else if(typeof a[f]=="object"){const b=a[f];let h=c.tree;if(m.isArray(b)){h={};for(let L in c.tree){const v=c.tree[L];if(v.autoIncrementInputs&&v.input.type.toLowerCase()==="checkbox"&&b.indexOf(v.input.value)>-1){v.input.checked=!0;continue}h[L]=v}}n(h,b)}continue}if(i.flatList){for(let b in a){const h=a[b];if(h&&h[0]===c.name&&r[c.name]!==b){r[c.name]=b,m.setInputValue(c,h[1],i.triggerChangeEvent);break}}continue}typeof a[f]>"u"||m.setInputValue(c,a[f]||null,i.triggerChangeEvent)}}n(l,t)}static reset(e){const t=m.getFieldTree(e);function i(s){for(let l in s){const r=s[l];if(r.type==="nested"){i(r.tree);continue}if(r.type==="radio"){for(let d=0;d<r.inputs.length;d++){const a=r.inputs[d];a.checked=a.defaultChecked}continue}if(r.inputType&&m.buttonInputTypes.indexOf(r.inputType)>-1)continue;const n=r.input;if(m.checkedInputTypes.indexOf(r.inputType)>-1)n.checked=n.defaultChecked;else if(n instanceof HTMLSelectElement){const d=n.querySelectorAll("option");for(let a=0;a<d.length;a++){const u=d[a];u.selected=u.defaultSelected}}else n.getAttribute("value")?n.value=n.getAttribute("value"):(typeof n.defaultValue=="string"||typeof n.defaultValue=="number")&&(n.value=n.defaultValue)}}i(t)}static clear(e){const t=m.getFieldTree(e);function i(s){for(let l in s){const r=s[l];if(r.type==="nested"){i(r.tree);continue}r.input&&m.buttonInputTypes.indexOf(r.inputType)>-1||m.setInputValue(r,null)}}i(t)}static setInputValue(e,t,i){const s=i?function(d){let a=null;typeof Event=="function"?a=new Event("change",{bubbles:!0}):(a=document.createEvent("Event"),a.initEvent("change",!0,!0)),d.dispatchEvent(a)}:null;if(e.type==="radio"){let d=[];for(let a=0;a<e.inputs.length;a++){const u=e.inputs[a];if(u.checked&&d.push(u),u.checked=!1,t!==null&&m.stringify(u.value)===m.stringify(t)){u.checked||d.push(u),u.checked=!0;break}}if(s)for(let a in d)s(d[a]);return}const l=e.input,r=e.inputType;if(r==="file")return;let n=!1;if(r==="checkbox")t=t===!0||t!==null&&m.stringify(l.value)===m.stringify(t),t!==l.checked&&(n=!0),l.checked=t;else if(l instanceof HTMLSelectElement){let d=t;d==null?d=[]:m.isObject(d)?d=Object.values(d):m.isArray(d)||(d=[d]);const a=[],u=[];for(let c=0;c<l.options.length;c++){const f=l.options[c],b=(typeof f.value<"u"?f.value:f.text).toString();f.selected!==!1&&a.push(c),f.selected=!1;for(let h=0;h<d.length;h++)if(b===m.stringify(d[h])){f.selected=!0;break}f.selected!==!1&&u.push(c)}n=JSON.stringify(a)!==JSON.stringify(u)}else l.value!==t&&(n=!0),l.value=t;n&&s&&s(l)}static stringify(e){return e===void 0||typeof e=="object"?"":typeof e=="boolean"?e?"1":"0":e+""}static getFieldTree(e,t){if(e=m.getElement(e),!e)return[];let i=e.querySelectorAll("select, textarea, input, button"),s={},l={};for(let r=0;r<i.length;r++){const n=i[r];if(!n.name||n.name.length===0||t&&t(n)!==!0)continue;const d=(n.type||"text").toLowerCase();let a=n.name;const u=n.name.replace(/\]/g,"").split("["),c=a.substr(-2)==="[]";c&&(n instanceof HTMLSelectElement&&n.multiple||d==="radio")&&u.pop();const f=u.length;let b=s,h="";for(let L=0;L<f;L++){let v=u[L],S=h?h+"["+v+"]":v;v===""&&(typeof l[S]>"u"&&(l[S]=0),v=l[S].toString(),l[S]++),h=h?h+"["+v+"]":v,f-1===L?(n.type||"text").toLowerCase()==="radio"?(typeof b[v]>"u"&&(b[v]={type:"radio",name:n.name,inputType:d,inputs:[],autoIncrementInputs:0}),c&&(b[v].autoIncrementInputs=1),b[v].inputs.push(n)):b[v]={type:"default",name:n.name,inputType:d,input:n,autoIncrementInputs:c?1:0}:((typeof b[v]>"u"||typeof b[v].tree>"u")&&(b[v]={type:"nested",tree:{}}),b=b[v].tree)}}return s}static isObject(e){return e&&typeof e=="object"&&Object.prototype.toString.call(e)!=="[object Array]"}static isArray(e){return Array.isArray(e)}static getElement(e){return typeof e=="string"?document.querySelector(e):e instanceof HTMLElement?e:typeof jQuery<"u"&&e instanceof jQuery||typeof $<"u"&&e instanceof $?e[0]:(console.warn("FormDataJson: Unsupported element passed. Supported is HTMLElement, a string query selector, JQuery or $ object"),null)}static merge(e,t){let i={};for(let s in e)i[s]=e[s];for(let s in t)i[s]=t[s];return i}}m.defaultOptionsToJson={includeDisabled:!1,includeButtonValues:!1,uncheckedValue:void 0,inputFilter:null,flatList:!1,skipEmpty:!1,filesCallback:null,fileReaderFunction:"readAsDataURL",arrayify:!0},m.defaultOptionsFromJson={flatList:!1,clearOthers:!1,resetOthers:!1,triggerChangeEvent:!1},m.buttonInputTypes=["button","submit","reset","image"],m.checkedInputTypes=["checkbox","radio"];var X=Object.defineProperty,W=(o,e,t)=>e in o?X(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,E=(o,e,t)=>(W(o,typeof e!="symbol"?e+"":e,t),t);const Q=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Y=/^-?[0-9]\d*$/,D=/^(?=.*[A-Za-z])(?=.*\d).{8,}$/,J=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,R=o=>{let e=o;return typeof o=="string"&&(e=o.trim()),!e},ee=o=>Q.test(o),te=(o,e)=>o.length>e,ie=(o,e)=>o.length<e,se=o=>typeof o!="string"?!1:!isNaN(+o)&&!isNaN(parseFloat(o)),re=o=>Y.test(o),le=o=>D.test(o),ne=o=>J.test(o),oe=(o,e)=>o>e,ae=(o,e)=>o<e,M=o=>typeof o!="string"||o==="";var y=(o=>(o.Required="required",o.Email="email",o.MinLength="minLength",o.MaxLength="maxLength",o.Password="password",o.Number="number",o.Integer="integer",o.MaxNumber="maxNumber",o.MinNumber="minNumber",o.StrongPassword="strongPassword",o.CustomRegexp="customRegexp",o.MinFilesCount="minFilesCount",o.MaxFilesCount="maxFilesCount",o.Files="files",o))(y||{}),N=(o=>(o.Required="required",o))(N||{}),z=(o=>(o.Label="label",o.LabelArrow="labelArrow",o))(z||{});const B=[{key:y.Required,dict:{en:"The field is required"}},{key:y.Email,dict:{en:"Email has invalid format"}},{key:y.MaxLength,dict:{en:"The field must contain a maximum of :value characters"}},{key:y.MinLength,dict:{en:"The field must contain a minimum of :value characters"}},{key:y.Password,dict:{en:"Password must contain minimum eight characters, at least one letter and one number"}},{key:y.StrongPassword,dict:{en:"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character"}},{key:y.Number,dict:{en:"Value should be a number"}},{key:y.MaxNumber,dict:{en:"Number should be less or equal than :value"}},{key:y.MinNumber,dict:{en:"Number should be more or equal than :value"}},{key:y.MinFilesCount,dict:{en:"Files count should be more or equal than :value"}},{key:y.MaxFilesCount,dict:{en:"Files count should be less or equal than :value"}},{key:y.Files,dict:{en:"Uploaded files have one or several invalid properties (extension/size/type etc)."}}],de="Value is incorrect",j=o=>typeof o=="object"&&o!==null&&"then"in o&&typeof o.then=="function",ue=o=>{let e=o;const t=[];for(;e;)t.unshift(e),e=e.parentNode;return t},ce=(o,e)=>{const t=[...e].reverse();for(let i=0,s=t.length;i<s;++i){const l=t[i];for(const r in o){const n=o[r];if(n.groupElem===l)return[r,n]}}return null},x=o=>Array.isArray(o)?o.filter(e=>e.length>0):typeof o=="string"&&o.trim()?[...o.split(" ").filter(e=>e.length>0)]:[],A=o=>o instanceof Element||o instanceof HTMLDocument,fe=".just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}",O=5,G={errorFieldStyle:{color:"#b81111",border:"1px solid #B81111"},errorFieldCssClass:"just-validate-error-field",successFieldCssClass:"just-validate-success-field",errorLabelStyle:{color:"#b81111"},errorLabelCssClass:"just-validate-error-label",successLabelCssClass:"just-validate-success-label",focusInvalidField:!0,lockForm:!0,testingMode:!1,validateBeforeSubmitting:!1,submitFormAutomatically:!1};class he{constructor(e,t,i){E(this,"form",null),E(this,"fields",{}),E(this,"groupFields",{}),E(this,"errors",{}),E(this,"isValid",!1),E(this,"isSubmitted",!1),E(this,"globalConfig",G),E(this,"errorLabels",{}),E(this,"successLabels",{}),E(this,"eventListeners",[]),E(this,"dictLocale",B),E(this,"currentLocale","en"),E(this,"customStyleTags",{}),E(this,"onSuccessCallback"),E(this,"onFailCallback"),E(this,"onValidateCallback"),E(this,"tooltips",[]),E(this,"lastScrollPosition"),E(this,"isScrollTick"),E(this,"fieldIds",new Map),E(this,"getKeyByFieldSelector",s=>this.fieldIds.get(s)),E(this,"getFieldSelectorByKey",s=>{for(const[l,r]of this.fieldIds)if(s===r)return l}),E(this,"getCompatibleFields",()=>{const s={};return Object.keys(this.fields).forEach(l=>{let r=l;const n=this.getFieldSelectorByKey(l);typeof n=="string"&&(r=n),s[r]={...this.fields[l]}}),s}),E(this,"setKeyByFieldSelector",s=>{if(this.fieldIds.has(s))return this.fieldIds.get(s);const l=String(this.fieldIds.size+1);return this.fieldIds.set(s,l),l}),E(this,"refreshAllTooltips",()=>{this.tooltips.forEach(s=>{s.refresh()})}),E(this,"handleDocumentScroll",()=>{this.lastScrollPosition=window.scrollY,this.isScrollTick||(window.requestAnimationFrame(()=>{this.refreshAllTooltips(),this.isScrollTick=!1}),this.isScrollTick=!0)}),E(this,"formSubmitHandler",s=>{s.preventDefault(),this.isSubmitted=!0,this.validateHandler(s)}),E(this,"handleFieldChange",s=>{let l;for(const r in this.fields)if(this.fields[r].elem===s){l=r;break}l&&(this.fields[l].touched=!0,this.validateField(l,!0))}),E(this,"handleGroupChange",s=>{let l;for(const r in this.groupFields)if(this.groupFields[r].elems.find(d=>d===s)){l=r;break}l&&(this.groupFields[l].touched=!0,this.validateGroup(l,!0))}),E(this,"handlerChange",s=>{s.target&&(this.handleFieldChange(s.target),this.handleGroupChange(s.target),this.renderErrors())}),this.initialize(e,t,i)}initialize(e,t,i){if(this.form=null,this.errors={},this.isValid=!1,this.isSubmitted=!1,this.globalConfig=G,this.errorLabels={},this.successLabels={},this.eventListeners=[],this.customStyleTags={},this.tooltips=[],this.currentLocale="en",typeof e=="string"){const s=document.querySelector(e);if(!s)throw Error(`Form with ${e} selector not found! Please check the form selector`);this.setForm(s)}else if(e instanceof HTMLFormElement)this.setForm(e);else throw Error("Form selector is not valid. Please specify a string selector or a DOM element.");if(this.globalConfig={...G,...t},i&&(this.dictLocale=[...i,...B]),this.isTooltip()){const s=document.createElement("style");s.textContent=fe,this.customStyleTags[z.Label]=document.head.appendChild(s),this.addListener("scroll",document,this.handleDocumentScroll)}}getLocalisedString(e,t,i){var s;const l=i??e;let r=(s=this.dictLocale.find(n=>n.key===l))==null?void 0:s.dict[this.currentLocale];if(r||i&&(r=i),r&&t!==void 0)switch(e){case y.MaxLength:case y.MinLength:case y.MaxNumber:case y.MinNumber:case y.MinFilesCount:case y.MaxFilesCount:r=r.replace(":value",String(t))}return r||i||de}getFieldErrorMessage(e,t){const i=typeof e.errorMessage=="function"?e.errorMessage(this.getElemValue(t),this.fields):e.errorMessage;return this.getLocalisedString(e.rule,e.value,i)}getFieldSuccessMessage(e,t){const i=typeof e=="function"?e(this.getElemValue(t),this.fields):e;return this.getLocalisedString(void 0,void 0,i)}getGroupErrorMessage(e){return this.getLocalisedString(e.rule,void 0,e.errorMessage)}getGroupSuccessMessage(e){if(e.successMessage)return this.getLocalisedString(void 0,void 0,e.successMessage)}setFieldInvalid(e,t){this.fields[e].isValid=!1,this.fields[e].errorMessage=this.getFieldErrorMessage(t,this.fields[e].elem)}setFieldValid(e,t){this.fields[e].isValid=!0,t!==void 0&&(this.fields[e].successMessage=this.getFieldSuccessMessage(t,this.fields[e].elem))}setGroupInvalid(e,t){this.groupFields[e].isValid=!1,this.groupFields[e].errorMessage=this.getGroupErrorMessage(t)}setGroupValid(e,t){this.groupFields[e].isValid=!0,this.groupFields[e].successMessage=this.getGroupSuccessMessage(t)}getElemValue(e){switch(e.type){case"checkbox":return e.checked;case"file":return e.files;default:return e.value}}validateGroupRule(e,t,i){switch(i.rule){case N.Required:t.every(s=>!s.checked)?this.setGroupInvalid(e,i):this.setGroupValid(e,i)}}validateFieldRule(e,t,i,s=!1){const l=i.value,r=this.getElemValue(t);if(i.plugin){i.plugin(r,this.getCompatibleFields())||this.setFieldInvalid(e,i);return}switch(i.rule){case y.Required:{R(r)&&this.setFieldInvalid(e,i);break}case y.Email:{if(M(r))break;ee(r)||this.setFieldInvalid(e,i);break}case y.MaxLength:{if(l===void 0){console.error(`Value for ${i.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(typeof l!="number"){console.error(`Value for ${i.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(M(r))break;te(r,l)&&this.setFieldInvalid(e,i);break}case y.MinLength:{if(l===void 0){console.error(`Value for ${i.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(typeof l!="number"){console.error(`Value for ${i.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(M(r))break;ie(r,l)&&this.setFieldInvalid(e,i);break}case y.Password:{if(M(r))break;le(r)||this.setFieldInvalid(e,i);break}case y.StrongPassword:{if(M(r))break;ne(r)||this.setFieldInvalid(e,i);break}case y.Number:{if(M(r))break;se(r)||this.setFieldInvalid(e,i);break}case y.Integer:{if(M(r))break;re(r)||this.setFieldInvalid(e,i);break}case y.MaxNumber:{if(l===void 0){console.error(`Value for ${i.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(typeof l!="number"){console.error(`Value for ${i.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(M(r))break;const n=+r;(Number.isNaN(n)||oe(n,l))&&this.setFieldInvalid(e,i);break}case y.MinNumber:{if(l===void 0){console.error(`Value for ${i.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(typeof l!="number"){console.error(`Value for ${i.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(M(r))break;const n=+r;(Number.isNaN(n)||ae(n,l))&&this.setFieldInvalid(e,i);break}case y.CustomRegexp:{if(l===void 0){console.error(`Value for ${i.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,i);return}let n;try{n=new RegExp(l)}catch{console.error(`Value for ${i.rule} rule for [${e}] should be a valid regexp. This field will be always invalid.`),this.setFieldInvalid(e,i);break}const d=String(r);d!==""&&!n.test(d)&&this.setFieldInvalid(e,i);break}case y.MinFilesCount:{if(l===void 0){console.error(`Value for ${i.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,i);break}if(typeof l!="number"){console.error(`Value for ${i.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(Number.isFinite(r==null?void 0:r.length)&&r.length<l){this.setFieldInvalid(e,i);break}break}case y.MaxFilesCount:{if(l===void 0){console.error(`Value for ${i.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,i);break}if(typeof l!="number"){console.error(`Value for ${i.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,i);break}if(Number.isFinite(r==null?void 0:r.length)&&r.length>l){this.setFieldInvalid(e,i);break}break}case y.Files:{if(l===void 0){console.error(`Value for ${i.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,i);return}if(typeof l!="object"){console.error(`Value for ${i.rule} rule for [${e}] field should be an object. This field will be always invalid.`),this.setFieldInvalid(e,i);return}const n=l.files;if(typeof n!="object"){console.error(`Value for ${i.rule} rule for [${e}] field should be an object with files array. This field will be always invalid.`),this.setFieldInvalid(e,i);return}const d=(a,u)=>{const c=Number.isFinite(u.minSize)&&a.size<u.minSize,f=Number.isFinite(u.maxSize)&&a.size>u.maxSize,b=Array.isArray(u.names)&&!u.names.includes(a.name),h=Array.isArray(u.extensions)&&!u.extensions.includes(a.name.split(".")[a.name.split(".").length-1]),L=Array.isArray(u.types)&&!u.types.includes(a.type);return c||f||b||h||L};if(typeof r=="object"&&r!==null)for(let a=0,u=r.length;a<u;++a){const c=r.item(a);if(!c){this.setFieldInvalid(e,i);break}if(d(c,n)){this.setFieldInvalid(e,i);break}}break}default:{if(typeof i.validator!="function"){console.error(`Validator for custom rule for [${e}] field should be a function. This field will be always invalid.`),this.setFieldInvalid(e,i);return}const n=i.validator(r,this.getCompatibleFields());if(typeof n!="boolean"&&typeof n!="function"&&console.error(`Validator return value for [${e}] field should be boolean or function. It will be cast to boolean.`),typeof n=="function")if(s)this.fields[e].asyncCheckPending=!0;else{this.fields[e].asyncCheckPending=!1;const d=n();if(!j(d)){console.error(`Validator function for custom rule for [${e}] field should return a Promise. This field will be always invalid.`),this.setFieldInvalid(e,i);return}return d.then(a=>{a||this.setFieldInvalid(e,i)}).catch(()=>{this.setFieldInvalid(e,i)})}n||this.setFieldInvalid(e,i)}}}isFormValid(){let e=!0;for(let t=0,i=Object.values(this.fields).length;t<i;++t){const s=Object.values(this.fields)[t];if(s.isValid===void 0){e=void 0;break}if(s.isValid===!1){e=!1;break}}for(let t=0,i=Object.values(this.groupFields).length;t<i;++t){const s=Object.values(this.groupFields)[t];if(s.isValid===void 0){e=void 0;break}if(s.isValid===!1){e=!1;break}}return e}validateField(e,t=!1){var i;const s=this.fields[e];s.isValid=!0;const l=[];return[...s.rules].reverse().forEach(r=>{const n=this.validateFieldRule(e,s.elem,r,t);j(n)&&l.push(n)}),s.isValid&&this.setFieldValid(e,(i=s.config)==null?void 0:i.successMessage),Promise.allSettled(l).finally(()=>{var r;t&&((r=this.onValidateCallback)==null||r.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}))})}revalidateField(e){if(typeof e!="string"&&!A(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");const t=this.getKeyByFieldSelector(e);return!t||!this.fields[t]?(console.error("Field not found. Check the field selector."),Promise.reject()):new Promise(i=>{this.validateField(t,!0).finally(()=>{this.clearFieldStyle(t),this.clearFieldLabel(t),this.renderFieldError(t,!0),i(!!this.fields[t].isValid)})})}revalidateGroup(e){if(typeof e!="string"&&!A(e))throw Error("Group selector is not valid. Please specify a string selector or a valid DOM element.");const t=this.getKeyByFieldSelector(e);return!t||!this.groupFields[t]?(console.error("Group not found. Check the group selector."),Promise.reject()):new Promise(i=>{this.validateGroup(t).finally(()=>{this.clearFieldLabel(t),this.renderGroupError(t,!0),i(!!this.groupFields[t].isValid)})})}validateGroup(e,t=!1){const i=this.groupFields[e],s=[];return[...i.rules].reverse().forEach(l=>{const r=this.validateGroupRule(e,i.elems,l);j(r)&&s.push(r)}),Promise.allSettled(s).finally(()=>{var l;t&&((l=this.onValidateCallback)==null||l.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}))})}focusInvalidField(){for(const e in this.fields){const t=this.fields[e];if(!t.isValid){setTimeout(()=>t.elem.focus(),0);break}}}afterSubmitValidation(e=!1){this.renderErrors(e),this.globalConfig.focusInvalidField&&this.focusInvalidField()}validate(e=!1){return new Promise(t=>{const i=[];Object.keys(this.fields).forEach(s=>{const l=this.validateField(s);j(l)&&i.push(l)}),Object.keys(this.groupFields).forEach(s=>{const l=this.validateGroup(s);j(l)&&i.push(l)}),Promise.allSettled(i).then(()=>{var s;this.afterSubmitValidation(e),(s=this.onValidateCallback)==null||s.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}),t(!!i.length)})})}revalidate(){return new Promise(e=>{this.validateHandler(void 0,!0).finally(()=>{this.globalConfig.focusInvalidField&&this.focusInvalidField(),e(this.isValid)})})}validateHandler(e,t=!1){return this.globalConfig.lockForm&&this.lockForm(),this.validate(t).finally(()=>{var i,s,l;this.globalConfig.lockForm&&this.unlockForm(),this.isValid?((i=this.onSuccessCallback)==null||i.call(this,e),this.globalConfig.submitFormAutomatically&&((s=e==null?void 0:e.currentTarget)==null||s.submit())):(l=this.onFailCallback)==null||l.call(this,this.getCompatibleFields(),this.groupFields)})}setForm(e){this.form=e,this.form.setAttribute("novalidate","novalidate"),this.removeListener("submit",this.form,this.formSubmitHandler),this.addListener("submit",this.form,this.formSubmitHandler)}addListener(e,t,i){t.addEventListener(e,i),this.eventListeners.push({type:e,elem:t,func:i})}removeListener(e,t,i){t.removeEventListener(e,i),this.eventListeners=this.eventListeners.filter(s=>s.type!==e||s.elem!==t)}addField(e,t,i){if(typeof e!="string"&&!A(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");let s;if(typeof e=="string"?s=this.form.querySelector(e):s=e,!s)throw Error("Field doesn't exist in the DOM! Please check the field selector.");if(!Array.isArray(t)||!t.length)throw Error("Rules argument should be an array and should contain at least 1 element.");t.forEach(r=>{if(!("rule"in r||"validator"in r||"plugin"in r))throw Error("Rules argument must contain at least one rule or validator property.");if(!r.validator&&!r.plugin&&(!r.rule||!Object.values(y).includes(r.rule)))throw Error(`Rule should be one of these types: ${Object.values(y).join(", ")}. Provided value: ${r.rule}`)});const l=this.setKeyByFieldSelector(e);return this.fields[l]={elem:s,rules:t,isValid:void 0,touched:!1,config:i},this.setListeners(s),(this.isSubmitted||this.globalConfig.validateBeforeSubmitting)&&this.validateField(l),this}removeField(e){if(typeof e!="string"&&!A(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");const t=this.getKeyByFieldSelector(e);if(!t||!this.fields[t])return console.error("Field not found. Check the field selector."),this;const i=this.getListenerType(this.fields[t].elem.type);return this.removeListener(i,this.fields[t].elem,this.handlerChange),this.clearErrors(),delete this.fields[t],this}removeGroup(e){if(typeof e!="string")throw Error("Group selector is not valid. Please specify a string selector.");const t=this.getKeyByFieldSelector(e);return!t||!this.groupFields[t]?(console.error("Group not found. Check the group selector."),this):(this.groupFields[t].elems.forEach(i=>{const s=this.getListenerType(i.type);this.removeListener(s,i,this.handlerChange)}),this.clearErrors(),delete this.groupFields[t],this)}addRequiredGroup(e,t,i,s){if(typeof e!="string"&&!A(e))throw Error("Group selector is not valid. Please specify a string selector or a valid DOM element.");let l;if(typeof e=="string"?l=this.form.querySelector(e):l=e,!l)throw Error("Group selector not found! Please check the group selector.");const r=l.querySelectorAll("input"),n=Array.from(r).filter(a=>{const u=ce(this.groupFields,ue(a));return u?u[1].elems.find(c=>c!==a):!0}),d=this.setKeyByFieldSelector(e);return this.groupFields[d]={rules:[{rule:N.Required,errorMessage:t,successMessage:s}],groupElem:l,elems:n,touched:!1,isValid:void 0,config:i},r.forEach(a=>{this.setListeners(a)}),this}getListenerType(e){switch(e){case"checkbox":case"select-one":case"file":case"radio":return"change";default:return"input"}}setListeners(e){const t=this.getListenerType(e.type);this.removeListener(t,e,this.handlerChange),this.addListener(t,e,this.handlerChange)}clearFieldLabel(e){var t,i;(t=this.errorLabels[e])==null||t.remove(),(i=this.successLabels[e])==null||i.remove()}clearFieldStyle(e){var t,i,s,l;const r=this.fields[e],n=((t=r.config)==null?void 0:t.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(n).forEach(a=>{r.elem.style[a]=""});const d=((i=r.config)==null?void 0:i.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(d).forEach(a=>{r.elem.style[a]=""}),r.elem.classList.remove(...x(((s=r.config)==null?void 0:s.errorFieldCssClass)||this.globalConfig.errorFieldCssClass),...x(((l=r.config)==null?void 0:l.successFieldCssClass)||this.globalConfig.successFieldCssClass))}clearErrors(){var e,t;Object.keys(this.errorLabels).forEach(i=>this.errorLabels[i].remove()),Object.keys(this.successLabels).forEach(i=>this.successLabels[i].remove());for(const i in this.fields)this.clearFieldStyle(i);for(const i in this.groupFields){const s=this.groupFields[i],l=((e=s.config)==null?void 0:e.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(l).forEach(n=>{s.elems.forEach(d=>{var a;d.style[n]="",d.classList.remove(...x(((a=s.config)==null?void 0:a.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))})});const r=((t=s.config)==null?void 0:t.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(r).forEach(n=>{s.elems.forEach(d=>{var a;d.style[n]="",d.classList.remove(...x(((a=s.config)==null?void 0:a.successFieldCssClass)||this.globalConfig.successFieldCssClass))})})}this.tooltips=[]}isTooltip(){return!!this.globalConfig.tooltip}lockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let t=0,i=e.length;t<i;++t)e[t].setAttribute("data-just-validate-fallback-disabled",e[t].disabled?"true":"false"),e[t].setAttribute("disabled","disabled"),e[t].style.pointerEvents="none",e[t].style.webkitFilter="grayscale(100%)",e[t].style.filter="grayscale(100%)"}unlockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let t=0,i=e.length;t<i;++t)e[t].getAttribute("data-just-validate-fallback-disabled")!=="true"&&e[t].removeAttribute("disabled"),e[t].style.pointerEvents="",e[t].style.webkitFilter="",e[t].style.filter=""}renderTooltip(e,t,i){var s;const{top:l,left:r,width:n,height:d}=e.getBoundingClientRect(),a=t.getBoundingClientRect(),u=i||((s=this.globalConfig.tooltip)==null?void 0:s.position);switch(u){case"left":{t.style.top=`${l+d/2-a.height/2}px`,t.style.left=`${r-a.width-O}px`;break}case"top":{t.style.top=`${l-a.height-O}px`,t.style.left=`${r+n/2-a.width/2}px`;break}case"right":{t.style.top=`${l+d/2-a.height/2}px`,t.style.left=`${r+n+O}px`;break}case"bottom":{t.style.top=`${l+d+O}px`,t.style.left=`${r+n/2-a.width/2}px`;break}}return t.dataset.direction=u,{refresh:()=>{this.renderTooltip(e,t,i)}}}createErrorLabelElem(e,t,i){const s=document.createElement("div");s.innerHTML=t;const l=this.isTooltip()?i==null?void 0:i.errorLabelStyle:(i==null?void 0:i.errorLabelStyle)||this.globalConfig.errorLabelStyle;return Object.assign(s.style,l),s.classList.add(...x((i==null?void 0:i.errorLabelCssClass)||this.globalConfig.errorLabelCssClass),"just-validate-error-label"),this.isTooltip()&&(s.dataset.tooltip="true"),this.globalConfig.testingMode&&(s.dataset.testId=`error-label-${e}`),this.errorLabels[e]=s,s}createSuccessLabelElem(e,t,i){if(t===void 0)return null;const s=document.createElement("div");s.innerHTML=t;const l=(i==null?void 0:i.successLabelStyle)||this.globalConfig.successLabelStyle;return Object.assign(s.style,l),s.classList.add(...x((i==null?void 0:i.successLabelCssClass)||this.globalConfig.successLabelCssClass),"just-validate-success-label"),this.globalConfig.testingMode&&(s.dataset.testId=`success-label-${e}`),this.successLabels[e]=s,s}renderErrorsContainer(e,t){const i=t||this.globalConfig.errorsContainer;if(typeof i=="string"){const s=this.form.querySelector(i);if(s)return s.appendChild(e),!0;console.error(`Error container with ${i} selector not found. Errors will be rendered as usual`)}return i instanceof Element?(i.appendChild(e),!0):(i!==void 0&&console.error("Error container not found. It should be a string or existing Element. Errors will be rendered as usual"),!1)}renderGroupLabel(e,t,i,s){!s&&this.renderErrorsContainer(t,i)||e.appendChild(t)}renderFieldLabel(e,t,i,s){var l,r,n,d,a,u,c;if(!(!s&&this.renderErrorsContainer(t,i)))if(e.type==="checkbox"||e.type==="radio"){const f=document.querySelector(`label[for="${e.getAttribute("id")}"]`);((r=(l=e.parentElement)==null?void 0:l.tagName)==null?void 0:r.toLowerCase())==="label"?(d=(n=e.parentElement)==null?void 0:n.parentElement)==null||d.appendChild(t):f?(a=f.parentElement)==null||a.appendChild(t):(u=e.parentElement)==null||u.appendChild(t)}else(c=e.parentElement)==null||c.appendChild(t)}showLabels(e,t){Object.keys(e).forEach((i,s)=>{const l=e[i],r=this.getKeyByFieldSelector(i);if(!r||!this.fields[r]){console.error("Field not found. Check the field selector.");return}const n=this.fields[r];n.isValid=!t,this.clearFieldStyle(r),this.clearFieldLabel(r),this.renderFieldError(r,!1,l),s===0&&this.globalConfig.focusInvalidField&&setTimeout(()=>n.elem.focus(),0)})}showErrors(e){if(typeof e!="object")throw Error("[showErrors]: Errors should be an object with key: value format");this.showLabels(e,!0)}showSuccessLabels(e){if(typeof e!="object")throw Error("[showSuccessLabels]: Labels should be an object with key: value format");this.showLabels(e,!1)}renderFieldError(e,t=!1,i){var s,l,r,n,d,a;const u=this.fields[e];if(u.isValid===!1&&(this.isValid=!1),u.isValid===void 0||!t&&!this.isSubmitted&&!u.touched&&i===void 0)return;if(u.isValid){if(!u.asyncCheckPending){const f=this.createSuccessLabelElem(e,i!==void 0?i:u.successMessage,u.config);f&&this.renderFieldLabel(u.elem,f,(s=u.config)==null?void 0:s.errorsContainer,!0),u.elem.classList.add(...x(((l=u.config)==null?void 0:l.successFieldCssClass)||this.globalConfig.successFieldCssClass))}return}u.elem.classList.add(...x(((r=u.config)==null?void 0:r.errorFieldCssClass)||this.globalConfig.errorFieldCssClass));const c=this.createErrorLabelElem(e,i!==void 0?i:u.errorMessage,u.config);this.renderFieldLabel(u.elem,c,(n=u.config)==null?void 0:n.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(u.elem,c,(a=(d=u.config)==null?void 0:d.tooltip)==null?void 0:a.position))}renderGroupError(e,t=!0){var i,s,l,r;const n=this.groupFields[e];if(n.isValid===!1&&(this.isValid=!1),n.isValid===void 0||!t&&!this.isSubmitted&&!n.touched)return;if(n.isValid){n.elems.forEach(u=>{var c,f;Object.assign(u.style,((c=n.config)==null?void 0:c.successFieldStyle)||this.globalConfig.successFieldStyle),u.classList.add(...x(((f=n.config)==null?void 0:f.successFieldCssClass)||this.globalConfig.successFieldCssClass))});const a=this.createSuccessLabelElem(e,n.successMessage,n.config);a&&this.renderGroupLabel(n.groupElem,a,(i=n.config)==null?void 0:i.errorsContainer,!0);return}this.isValid=!1,n.elems.forEach(a=>{var u,c;Object.assign(a.style,((u=n.config)==null?void 0:u.errorFieldStyle)||this.globalConfig.errorFieldStyle),a.classList.add(...x(((c=n.config)==null?void 0:c.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))});const d=this.createErrorLabelElem(e,n.errorMessage,n.config);this.renderGroupLabel(n.groupElem,d,(s=n.config)==null?void 0:s.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(n.groupElem,d,(r=(l=n.config)==null?void 0:l.tooltip)==null?void 0:r.position))}renderErrors(e=!1){if(!(!this.isSubmitted&&!e&&!this.globalConfig.validateBeforeSubmitting)){this.clearErrors(),this.isValid=!0;for(const t in this.groupFields)this.renderGroupError(t);for(const t in this.fields)this.renderFieldError(t)}}destroy(){this.eventListeners.forEach(e=>{this.removeListener(e.type,e.elem,e.func)}),Object.keys(this.customStyleTags).forEach(e=>{this.customStyleTags[e].remove()}),this.clearErrors(),this.globalConfig.lockForm&&this.unlockForm()}refresh(){this.destroy(),this.form?(this.initialize(this.form,this.globalConfig),Object.keys(this.fields).forEach(e=>{const t=this.getFieldSelectorByKey(e);t&&this.addField(t,[...this.fields[e].rules],this.fields[e].config)})):console.error("Cannot initialize the library! Form is not defined")}setCurrentLocale(e){if(typeof e!="string"&&e!==void 0){console.error("Current locale should be a string");return}this.currentLocale=e,this.isSubmitted&&this.validate()}onSuccess(e){return this.onSuccessCallback=e,this}onFail(e){return this.onFailCallback=e,this}onValidate(e){return this.onValidateCallback=e,this}}class q extends Error{constructor(e,...t){super(...t),this.name="UnhandledMatchError",this.message=`Unhandled match value of type ${typeof e} - ${e}`,Error.captureStackTrace(this,q)}}const P=Symbol();function pe(o){throw o}const be=o=>pe(new q(o)),H=(o,e,t=be)=>{const i=new Map,s=Array.isArray(e)?e:Object.entries(e).map(([r,n])=>[r,n]);for(const[...r]of s){const n=r.pop();for(const d of r.flat())i.has(d)||i.set(d,n)}i.has(P)||i.set(P,t);const l=i.get(o)??i.get(P);return typeof l=="function"?l(o):l};H.default=P;const ge=(o,e)=>{const t=e.split(".");return o.elements.namedItem(t.reduce((i,s,l)=>l===0?s:`${i}[${s}]`,""))},K=o=>o.name.replace(/\[(\w+)\]/g,".$1");function me({form:o,rules:e={},customRules:t={},messages:i={},aliases:s={},globalConfig:l={}}){const r={errorFieldCssClass:["input-error"]},n=new he(o,{...r,...l}),d=f=>o.elements[f].value,a=(f,b)=>f.every(h=>b(d(h))),u=(f,b)=>f.some(h=>b(d(h)));function c(f){f.hasAttribute("hx-validate")&&f.addEventListener("htmx:confirm",function(b){b.detail.elt===f&&(b.preventDefault(),n.revalidateField(f).then(h=>{h&&b.detail.issueRequest()}))})}return Object.entries(e).forEach(([f,b])=>{const h=ge(o,f);if(!h)return;const L=K(h)||"field",v=s[L]||L,I=b.split("|").reduce((k,F)=>{const[_,C=""]=F.split(":");return k[_]=C.split(",").map(T=>T.trim()).filter(Boolean),k},{}),g=[];Object.entries(I).forEach(([k,F])=>{const _=i[`${L}:${k}`],C=p=>_||`The ${v} ${p}`,T={rule:"required",errorMessage:C("is required")};H(k,{required:()=>{g.push(T)},required_if:()=>{const[p,...w]=F;w.includes(d(p))&&g.push(T)},required_unless:()=>{const[p,...w]=F;w.includes(d(p))||g.push(T)},required_with:()=>{u(F,Boolean)&&g.push(T)},required_without:()=>{u(F,p=>!p)&&g.push(T)},required_with_all:()=>{a(F,Boolean)&&g.push(T)},required_without_all:()=>{a(F,p=>!p)&&g.push(T)},email:()=>{g.push({rule:"email",errorMessage:C("is not valid email")})},uppercase:()=>{g.push({validator:p=>p===(p||"").toUpperCase(),errorMessage:C("must be uppercase")})},lowercase:()=>{g.push({validator:p=>p===(p||"").toLowerCase(),errorMessage:C("must be lowercase")})},json:()=>{g.push({validator:p=>{try{return typeof JSON.parse(p)=="object"}catch{return!1}},errorMessage:C("must be a valid JSON string")})},alpha:()=>{g.push({rule:"customRegexp",value:/^[A-Za-z]+$/,errorMessage:C("only allows alphabet characters")})},numeric:()=>{g.push({rule:"number",errorMessage:C("must be numeric")})},alpha_num:()=>{g.push({rule:"customRegexp",value:/^[A-Za-z0-9]+$/,errorMessage:C("must only contain letters and numbers")})},alpha_dash:()=>{g.push({rule:"customRegexp",value:/^[A-Za-z0-9_-]+$/,errorMessage:C("must only contain letters, numbers, dashes and underscores")})},alpha_spaces:()=>{g.push({validator:p=>/^[A-Za-z]+(?: [A-Za-z]+)*$/.test((p||"").trim()),errorMessage:C("must only contain letters and spaces")})},in:()=>{g.push({validator:p=>F.includes(p),errorMessage:C(`only allows ${F.join(",")}`)})},not_in:()=>{g.push({validator:p=>!F.includes(p),errorMessage:C(`is not allowing ${F.join(",")}`)})},min:()=>{const p=Number(F[0]);g.push({validator:w=>Array.isArray(w)?w.length>=p:h.type==="number"?parseFloat(w)>=p:(w||"").length>=p,errorMessage:C(`minimum is ${p}`)})},max:()=>{const p=Number(F[0]);g.push({validator:w=>Array.isArray(w)?w.length<=p:h.type==="number"?parseFloat(w)<=p:(w||"").length<=p,errorMessage:C(`maximum is ${p}`)})},between:()=>{const[p,w]=F.map(Number);g.push({validator:V=>{if(Array.isArray(V))return V.length>=p&&V.length<=w;if(h.type==="number"){const U=parseFloat(V);return U>=p&&U<=w}const{length:Z}=V||"";return Z>=p&&Z<=w},errorMessage:C(`must be between ${p} and ${w}`)})},digits:()=>{const p=Number(F[0]);g.push({validator:w=>/^\d+$/.test(w)&&w.length===p,errorMessage:C(`must be numeric and have an exact length of ${p}`)})},digits_between:()=>{const[p,w]=F.map(Number);g.push({validator:V=>/^\d+$/.test(V)&&V.length>=p&&V.length<=w,errorMessage:C(`must have a length between ${p} and ${w}`)})},url:()=>{g.push({rule:"customRegexp",value:/^(https?|ftp):\/\/[^"]+$/,errorMessage:C("is not valid url")})},integer:()=>{g.push({rule:"integer",errorMessage:C("must be an integer")})},boolean:()=>{g.push({validator:p=>["true","false","1","0",!0,!1].includes(typeof p=="string"?p.toLowerCase():p),errorMessage:C("must be a boolean")})},array:()=>{g.push({validator:Array.isArray,errorMessage:C("must be an array")})},same:()=>{g.push({validator:p=>p===d(F[0]),errorMessage:C(`must be same as ${F[0]}`)})},regex:()=>{g.push({rule:"customRegexp",value:new RegExp(F[0]),errorMessage:C("is not valid format")})},date:()=>{g.push({validator:p=>!Number.isNaN(Date.parse(p)),errorMessage:C("is not a valid date")})},accepted:()=>{g.push({validator:p=>["yes","on","1","true",!0].includes(p),errorMessage:C("must be accepted")})},present:()=>{g.push({validator:()=>f in o.elements,errorMessage:C("must be present")})},different:()=>{g.push({validator:p=>p!==d(F[0]),errorMessage:C(`must be different from ${F[0]}`)})},after:()=>{g.push({validator:p=>new Date(p)>new Date(d(F[0])),errorMessage:C(`must be a date after ${F[0]}`)})},before:()=>{g.push({validator:p=>new Date(p)<new Date(d(F[0])),errorMessage:C(`must be a date before ${F[0]}`)})},nullable:()=>{},...t},()=>{})}),g.length>0&&(n.addField(h,g),c(h))}),Object.assign(n,{rules:e,messages:i,aliases:s,fieldHasRules(f){return!!this.rules[K(f)]},async validateFieldFor(f){if(!this.fieldHasRules(f))return!0;try{return await this.revalidateField(f)}catch{return!1}},async revalidateWithoutFocus(){const f=this.globalConfig.focusInvalidField;this.globalConfig.focusInvalidField=!1;const b=await this.revalidate();return this.globalConfig.focusInvalidField=f,b}})}window.mahxCheckout={validator:me,utils:{formDataJson:m}}})();
