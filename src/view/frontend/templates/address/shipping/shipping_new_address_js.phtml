<?php

use Magento\Framework\View\Element\Template;
use MageHx\MahxCheckout\Enum\CheckoutForm;
use MageHx\MahxCheckout\ViewModel\ShippingAddress;

/** @var Template $block */
/** @var string $eHtmlAttr */
/** @var string $nonce */
/** @var Closure $eJs */
/** @var Closure $eUrl */
/** @var Closure $viewModelProvider */
/** @var ShippingAddress $viewModel */
$viewModel = $viewModelProvider(ShippingAddress::class);
?>
<script nonce="<?= $eHtmlAttr($nonce) ?>">
    document.addEventListener('alpine:init', () => {
        Alpine.data('NewAddressFormManager', () => {
            const newFormId = '<?= $eJs(CheckoutForm::NEW_ADDRESS->value) ?>';
            const fieldsConfig = JSON.parse('<?= $eJs($viewModel->getAddressFieldsJson()) ?>');

            return {
                form: null,
                validator: null,

                init() {
                    this.form = this.$el.querySelector('form');
                    this.validator = window.mahxCheckout.validator(this.form);
                    this.modifyFormAfterRender();
                },

                handleCountryChange(event) {
                    this.$dispatch(`mahxcheckout-${newFormId}-country_id-changed`, { country: event.target.value })
                },

                async updateNewShippingAddress() {
                    try {
                        if (!await this.validator.revalidate()) {
                            return;
                        }

                        htmx.trigger(document.body, 'mahxcheckout-new-shipping-address-created');
                    } catch (e) {
                        console.error('NewShippingAddress::update', e);
                    }
                },

                modifyFormAfterRender() {
                    this.$nextTick(() => {
                        this.focusOnFirstname();
                        this.applyValidation();
                    });
                },

                focusOnFirstname() {
                    this.form.elements.firstname.focus();
                },

                applyValidation() {
                    this.validator.createValidationRulesForFieldConfig(fieldsConfig);
                    this.addValidatorToPageNavigation(this.form.id, this.validator);
                },
            };
        });
    });
</script>
