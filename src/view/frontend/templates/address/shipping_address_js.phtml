<?php declare(strict_types=1);

use MageHx\MageTemplateUtils\Model\Esc;
use MageHx\MageTemplateUtils\Model\ViewModelProvider;
use MageHx\MahxCheckout\ViewModel\DesignThemeInfo;
use Magento\Framework\View\Element\Template;
use MageHx\MahxCheckout\ViewModel\ShippingAddress;

/** @var Template $block */
/** @var string $nonce */
/** @var Esc $esc */
/** @var ViewModelProvider $viewModelProvider */

$viewModel = $viewModelProvider->get(ShippingAddress::class);
$themeInfo = $viewModelProvider->get(DesignThemeInfo::class);
?>
<script nonce="<?= $esc->htmlAttr($nonce) ?>">
    function ShippingAddressForm(form) {
        return {
            form: null,
            validator: null,
            validationRules: <?= /** @noEscape */ $viewModel->getValidationJson() ?>,

            init() {
                this.form = form || this.$el ;
                this.initializeValidator();
                this.registerEventListeners();
            },

            initializeValidator() {
                this.validator = mahxCheckout.validator(
                    Object.assign({ form: this.form }, this.validationRules)
                );
                this.addValidatorToPageNavigation(this.form.id, this.validator);
            },

            registerEventListeners() {
                <?php
                /**
                 * When county switches, it swaps just the region field within the shipping address.
                 * A region can be optional or required based on the country. So this means we
                 * need to "refresh" just the validation of region field. This is what we do here.
                 */
                ?>
                htmx.on('htmx:beforeSwap', (event) => {
                    if (event.detail.requestConfig.elt.name === 'country_id') {
                        this.validator.removeField(this.form.elements.region);
                    }
                });
                htmx.on(this.form, 'htmx:afterSwap', (event) => {
                    if (event.detail.requestConfig.elt.name === 'country_id') {
                        this.validator.applyRules({ region: this.validationRules.rules.region });
                    }
                });
            }
        };
    }
    <?php if($themeInfo->isHyvaTheme()): ?>
    document.addEventListener('alpine:init', () => {
        Alpine.data('ShippingAddressForm', ShippingAddressForm);
    });
    <?php endif; ?>
</script>
